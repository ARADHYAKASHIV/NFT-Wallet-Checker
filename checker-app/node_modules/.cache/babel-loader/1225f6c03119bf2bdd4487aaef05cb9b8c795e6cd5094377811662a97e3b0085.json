{"ast":null,"code":"import { Alchemy, Network } from \"alchemy-sdk\";\nconst ALCHEMY_API_KEY = \"Ax-Ek1jETl4pb2cpObI_INhJdO2j0Zc3\"; // Replace with your Alchemy API key\n\nconst networks = {\n  ethereum: Network.ETH_MAINNET,\n  polygon: Network.MATIC_MAINNET\n};\nconst getAlchemyConfig = network => ({\n  apiKey: ALCHEMY_API_KEY,\n  network: networks[network] || Network.ETH_MAINNET\n});\nexport const getAlchemyInstance = network => {\n  const config = getAlchemyConfig(network);\n  return new Alchemy(config);\n};","map":{"version":3,"names":["Alchemy","Network","ALCHEMY_API_KEY","networks","ethereum","ETH_MAINNET","polygon","MATIC_MAINNET","getAlchemyConfig","network","apiKey","getAlchemyInstance","config"],"sources":["E:/code/NFT-Wallet-Checker/checker-app/src/utils/alchemyConfig.js"],"sourcesContent":["import { Alchemy, Network } from \"alchemy-sdk\";\r\n\r\nconst ALCHEMY_API_KEY = \"Ax-Ek1jETl4pb2cpObI_INhJdO2j0Zc3\"; // Replace with your Alchemy API key\r\n\r\nconst networks = {\r\n  ethereum: Network.ETH_MAINNET,\r\n  polygon: Network.MATIC_MAINNET,\r\n};\r\n\r\nconst getAlchemyConfig = (network) => ({\r\n  apiKey: ALCHEMY_API_KEY,\r\n  network: networks[network] || Network.ETH_MAINNET,\r\n});\r\n\r\nexport const getAlchemyInstance = (network) => {\r\n  const config = getAlchemyConfig(network);\r\n  return new Alchemy(config);\r\n}; "],"mappings":"AAAA,SAASA,OAAO,EAAEC,OAAO,QAAQ,aAAa;AAE9C,MAAMC,eAAe,GAAG,kCAAkC,CAAC,CAAC;;AAE5D,MAAMC,QAAQ,GAAG;EACfC,QAAQ,EAAEH,OAAO,CAACI,WAAW;EAC7BC,OAAO,EAAEL,OAAO,CAACM;AACnB,CAAC;AAED,MAAMC,gBAAgB,GAAIC,OAAO,KAAM;EACrCC,MAAM,EAAER,eAAe;EACvBO,OAAO,EAAEN,QAAQ,CAACM,OAAO,CAAC,IAAIR,OAAO,CAACI;AACxC,CAAC,CAAC;AAEF,OAAO,MAAMM,kBAAkB,GAAIF,OAAO,IAAK;EAC7C,MAAMG,MAAM,GAAGJ,gBAAgB,CAACC,OAAO,CAAC;EACxC,OAAO,IAAIT,OAAO,CAACY,MAAM,CAAC;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}