{"ast":null,"code":"import { ethers } from 'ethers';\nconst WHITELIST_CONTRACT_ADDRESS = 'YOUR_CONTRACT_ADDRESS';\nconst WHITELIST_ABI = ['function isWhitelisted(address wallet) view returns (bool)'\n// Add other relevant functions\n];\nexport const checkWhitelist = async walletAddress => {\n  try {\n    const provider = new ethers.providers.JsonRpcProvider('YOUR_RPC_URL');\n    const contract = new ethers.Contract(WHITELIST_CONTRACT_ADDRESS, WHITELIST_ABI, provider);\n    const isWhitelisted = await contract.isWhitelisted(walletAddress);\n    return isWhitelisted;\n  } catch (error) {\n    console.error('Error checking whitelist:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["ethers","WHITELIST_CONTRACT_ADDRESS","WHITELIST_ABI","checkWhitelist","walletAddress","provider","providers","JsonRpcProvider","contract","Contract","isWhitelisted","error","console"],"sources":["E:/code/NFT-Wallet-Checker/checker-app/src/utils/contractConfig.js"],"sourcesContent":["import { ethers } from 'ethers';\r\n\r\nconst WHITELIST_CONTRACT_ADDRESS = 'YOUR_CONTRACT_ADDRESS';\r\nconst WHITELIST_ABI = [\r\n  'function isWhitelisted(address wallet) view returns (bool)',\r\n  // Add other relevant functions\r\n];\r\n\r\nexport const checkWhitelist = async (walletAddress) => {\r\n  try {\r\n    const provider = new ethers.providers.JsonRpcProvider('YOUR_RPC_URL');\r\n    const contract = new ethers.Contract(\r\n      WHITELIST_CONTRACT_ADDRESS,\r\n      WHITELIST_ABI,\r\n      provider\r\n    );\r\n    \r\n    const isWhitelisted = await contract.isWhitelisted(walletAddress);\r\n    return isWhitelisted;\r\n  } catch (error) {\r\n    console.error('Error checking whitelist:', error);\r\n    throw error;\r\n  }\r\n}; "],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAE/B,MAAMC,0BAA0B,GAAG,uBAAuB;AAC1D,MAAMC,aAAa,GAAG,CACpB;AACA;AAAA,CACD;AAED,OAAO,MAAMC,cAAc,GAAG,MAAOC,aAAa,IAAK;EACrD,IAAI;IACF,MAAMC,QAAQ,GAAG,IAAIL,MAAM,CAACM,SAAS,CAACC,eAAe,CAAC,cAAc,CAAC;IACrE,MAAMC,QAAQ,GAAG,IAAIR,MAAM,CAACS,QAAQ,CAClCR,0BAA0B,EAC1BC,aAAa,EACbG,QACF,CAAC;IAED,MAAMK,aAAa,GAAG,MAAMF,QAAQ,CAACE,aAAa,CAACN,aAAa,CAAC;IACjE,OAAOM,aAAa;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}