{"ast":null,"code":"var _jsxFileName = \"E:\\\\code\\\\NFT-Wallet-Checker\\\\checker-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Header from './components/Header';\nimport CheckerForm from './components/CheckerForm';\nimport ResultDisplay from './components/ResultDisplay';\nimport Footer from './components/Footer';\nimport ContactButton from './components/ContactButton';\nimport GlobalStyles from './styles/GlobalStyles';\nimport { checkWhitelist } from './utils/moralisConfig';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleCheck = async ({\n    walletAddress\n  }) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Basic validation\n      if (!walletAddress || !walletAddress.startsWith('0x') || walletAddress.length !== 42) {\n        throw new Error('Invalid wallet address format');\n      }\n\n      // Check whitelist status using Moralis\n      const whitelistStatus = await checkWhitelist(walletAddress);\n      setResult({\n        walletAddress,\n        status: whitelistStatus.isWhitelisted ? 'Whitelisted' : 'Not Whitelisted',\n        nftCount: whitelistStatus.details.nftCount,\n        tokenCount: whitelistStatus.details.tokenCount,\n        timestamp: whitelistStatus.details.lastChecked\n      });\n    } catch (err) {\n      setError(err.message || 'Failed to check wallet');\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(CheckerForm, {\n        onSubmit: handleCheck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxWidth: '800px',\n          margin: '1rem auto',\n          padding: '1rem',\n          background: 'rgba(239, 68, 68, 0.15)',\n          color: '#ef4444',\n          borderRadius: '12px',\n          textAlign: 'center'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxWidth: '800px',\n          margin: '2rem auto',\n          textAlign: 'center',\n          color: '#6366f1'\n        },\n        children: \"Checking wallet...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ResultDisplay, {\n        result: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"uCtqE6L5cE1OQfqZvrQ3dzd9CGE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Header","CheckerForm","ResultDisplay","Footer","ContactButton","GlobalStyles","checkWhitelist","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","result","setResult","loading","setLoading","error","setError","handleCheck","walletAddress","startsWith","length","Error","whitelistStatus","status","isWhitelisted","nftCount","details","tokenCount","timestamp","lastChecked","err","message","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","maxWidth","margin","padding","background","color","borderRadius","textAlign","_c","$RefreshReg$"],"sources":["E:/code/NFT-Wallet-Checker/checker-app/src/App.js"],"sourcesContent":["import { useState } from 'react';\r\nimport Header from './components/Header';\r\nimport CheckerForm from './components/CheckerForm';\r\nimport ResultDisplay from './components/ResultDisplay';\r\nimport Footer from './components/Footer';\r\nimport ContactButton from './components/ContactButton';\r\nimport GlobalStyles from './styles/GlobalStyles';\r\nimport { checkWhitelist } from './utils/moralisConfig';\r\n\r\nfunction App() {\r\n  const [result, setResult] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleCheck = async ({ walletAddress }) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // Basic validation\r\n      if (!walletAddress || !walletAddress.startsWith('0x') || walletAddress.length !== 42) {\r\n        throw new Error('Invalid wallet address format');\r\n      }\r\n\r\n      // Check whitelist status using Moralis\r\n      const whitelistStatus = await checkWhitelist(walletAddress);\r\n      \r\n      setResult({\r\n        walletAddress,\r\n        status: whitelistStatus.isWhitelisted ? 'Whitelisted' : 'Not Whitelisted',\r\n        nftCount: whitelistStatus.details.nftCount,\r\n        tokenCount: whitelistStatus.details.tokenCount,\r\n        timestamp: whitelistStatus.details.lastChecked\r\n      });\r\n      \r\n    } catch (err) {\r\n      setError(err.message || 'Failed to check wallet');\r\n      console.error('Error:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <Header />\r\n      <main>\r\n        <CheckerForm onSubmit={handleCheck} />\r\n        {error && (\r\n          <div style={{ \r\n            maxWidth: '800px', \r\n            margin: '1rem auto', \r\n            padding: '1rem', \r\n            background: 'rgba(239, 68, 68, 0.15)', \r\n            color: '#ef4444',\r\n            borderRadius: '12px',\r\n            textAlign: 'center' \r\n          }}>\r\n            {error}\r\n          </div>\r\n        )}\r\n        {loading ? (\r\n          <div style={{ \r\n            maxWidth: '800px', \r\n            margin: '2rem auto', \r\n            textAlign: 'center',\r\n            color: '#6366f1' \r\n          }}>\r\n            Checking wallet...\r\n          </div>\r\n        ) : (\r\n          <ResultDisplay result={result} />\r\n        )}\r\n      </main>\r\n      <ContactButton />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}